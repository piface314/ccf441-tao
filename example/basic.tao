'' ||| Module |||::: x231, Tree;

yin g: @@(Int, Real) |||::| @Char;

'' ||: Some.Other.Module;
'' ||: Math;
'' ||: Math ||:||: M;
'' ||: Math ||::|| sin, cos, tan;

::: Tree(K) = Node(key: K, left: @Tree(K), right: @Tree(K)),
              Leaf(item: K);

:::::: ITree = Tree(Int);

yin x: @Tree(Int);
yin f: @@@(Int, Real) |||::| @Char;

::::|| K
wuji show(s: @K) {
    yin buffer: @Char;
};

::: String = String(c: @Char, n: Int);

yang +>(x: @Real, y: Real): Real = '\n';

yang rand(): Int = M.randint(0, 10);

yang upper(c: Char): Char = c;

wuji main() {
    yin a: @Real = 0;
    yin b: Real;
    yin s: Strin;
    a +> b
};

'''

yin x: [3][2]Int = [[0, 1], [0, 1], [0, 1]]
    x[0]  [2]Int
    x[0][0]  Int
'''
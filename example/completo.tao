::: Tree = Node(k: Int, left: @Tree, right: @Tree),
           Leaf(i: Int);

yang add(item: Int, tree: @Tree): @Tree = {
    |:| tree@
    |:|||| Node(k, l, r) |:|:|:
        :|: item < k :|:|::
            tree.lt = add(item, l)
        :|::||
            tree.rt = add(item, r)
    |:|||| Leaf(i) |:|:|: {
        yin newLeaf: @Tree(K, T) = ::| Tree(K, T);
        yin leafKey: K = getKey(i);
        :|: item < leafKey :|:|::
            ::||:| Node(leafKey, newLeaf, tree)
        :|::||
            ::||:| Node(item, tree, newLeaf)
      }
};

yang fatorial(n: Int): Int = {
    yin x: Int = 1;
    yin i: Int = 1;

    :|| i <= n :|||:: i = i+1 :||||| {
        x = x * i
    };
    |||||: x
};

wuji main(argc: Int, argv: @@Char) {

};
